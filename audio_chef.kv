#:kivy 2.0.0

[PresetAccordionItemTitle@BoxLayout]:
    canvas.before:
        Color:
            rgb: 1, 1, 1
        BorderImage:
            source: ctx.item.background_normal if ctx.item.collapse else ctx.item.background_selected
            pos: self.pos
            size: self.size
        PushMatrix
        Translate:
            xy: self.center_x, self.center_y
        Rotate:
            angle: 90 if ctx.item.orientation == 'horizontal' else 0
            axis: 0, 0, 1
        Translate:
            xy: -self.center_x, -self.center_y
    canvas.after:
        PopMatrix
    BoxLayout:
        Label:
            text: ctx.title
        SelectableButton:
            text: 'Lock'
            on_release:
                root.parent.parent.parent.locked = not root.parent.parent.parent.locked
                self.select() if root.parent.parent.parent.locked else self.unselect()
                self.text = 'Locked' if root.parent.parent.parent.locked else 'Lock'


<AudioChefWindow>:
    orientation: 'vertical'
    name_changer: name_changer
    name_locked: bool(name_item.locked)
    ext_box: ext_box
    ext_locked: bool(ext_item.locked)
    transforms_box: transforms_box
    transforms_locked: bool(transforms_item.locked)
    presets_box: presets_box
    file_box: file_box
    BoxLayout:
        orientation: 'vertical'
        height: 175
        size_hint_y: None
        Label:
            text: "Welcome to AudioChef.\nIn the future you'll be able to create recipes for me to cook"
            height: 50
            size_hint_y: None
            text_size: self.width, None
            size: self.texture_size
        BoxLayout:
            height: 25
            size_hint_y: None
            Button:
                text: 'Save'
                on_release: root.save_preset()
            Button:
                text: "GO"
                on_release: root.execute_preset()
        Label:
            text: 'Messages:'
            height: 50
            size_hint_y: None
            text_size: self.width, None
            size: self.texture_size
        Label:
            id: messages_label
            height: 50
            size_hint_y: None
            text_size: self.width, None
            size: self.texture_size
    Accordion:
        AccordionItem:
            title: 'Presets'
            BoxLayout:
                id: presets_box
                orientation: 'vertical'
        AccordionItem:
            title: 'Current preset'
            Accordion:
                orientation: 'vertical'
                AccordionItem:
                    id: ext_item
                    title: 'Output Format'
                    locked: bool(root.ext_locked)
                    title_template: 'PresetAccordionItemTitle'
                    OptionsBox:
                        id: ext_box
                AccordionItem:
                    id: name_item
                    title: 'File Name Changer'
                    locked: bool(root.name_locked)
                    title_template: 'PresetAccordionItemTitle'
                    OutputChanger:
                        id: name_changer
                        preview_callback: root.filename_preview
                AccordionItem:
                    title: 'Added files'
                    BoxLayout:
                        orientation: 'vertical'
                        Label:
                            text: "The files you chose are:"
                            height: 25
                            size_hint_y: None
                        ScrollView:
                            GridLayout:
                                cols: 2
                                id: file_box
                                size_hint_y: None
                AccordionItem:
                    id: transforms_item
                    title: 'Transformations'
                    locked: bool(root.transforms_locked)
                    title_template: 'PresetAccordionItemTitle'
                    BoxLayout:
                        orientation: 'vertical'
                        pos_hint: {'top': 1}
                        BoxLayout:
                            height: 25
                            size_hint_y: None
                            Label:
                                text: "Added transformations:"
                            Button:
                                text: '+'
                                on_release: root.add_tranform_item()
                        BoxLayout:
                            orientation: 'vertical'
                            ScrollView:
                                BoxLayout:
                                    id: transforms_box
                                    orientation: 'vertical'
                                    height: 50 * len(self.children)
                                    size_hint_y: None


<TransformationForm>:
    height: 50
    size_hint_y: None
    Spinner:
        id: spinner
        width: 200
        size_hint_x: None
        text: 'Choose a tranformation:'
        values: root.transformations
        on_text: root.select_transformation(self.text)
    ScrollView:
        BoxLayout:
            id: args_box
            size_hint_x: None
    Button:
        width: 100
        size_hint_x: None
        text: 'remove'
        on_release: root.remove()

<SelectableButton>:
    width: max(120, self.texture_size[0])
    size_hint_x: None

<Button>:
    background_color: 'grey'


<PresetButton>:
    height: 50
    TextInput:
        text: root.preset_name
        on_text: root.rename_preset(root.preset_name, self.text)
    Button:
        text: 'Load'
        on_release: root.load_preset(root.preset_name)
    Label:
        text: 'Default:'
    CheckBox:
        group: 'default_preset'
        active: root.default
        on_active: root.make_default(root.preset_name, self.active)
    Button:
        width: 50
        size_hint_x: None
        text: '-'
        on_release: root.remove_preset(root.preset_name)



<OutputChanger>:
    orientation: 'vertical'
    GridLayout:
        cols: 2
        Label:
            text: 'Choose file name change type:'
        Label:
        Label:
            text: 'Replace text'
        CheckBox:
            active: root.mode == 'replace'
            group: 'name_changer'
            on_active: root.mode = 'replace'
        Label:
            text: 'Wildcards'
        CheckBox:
            active: root.mode == 'wildcards'
            group: 'name_changer'
            on_active: root.mode = 'wildcards'
    RelativeLayout:
        GridLayout:
            cols: 2
            Label:
                id: replace_from_label
                height: 25
                size_hint_y: None
                text: 'Replace this:'
            Label:
                id: replace_to_label
                height: 25
                size_hint_y: None
                text: 'With this:'
            TextInput:
                id: replace_from_input
                height: 25
                size_hint_y: None
                on_text: root.preview_callback()
            TextInput:
                id: replace_to_input
                height: 25
                size_hint_y: None
                text: ''
                on_text: root.preview_callback()
        BoxLayout:
            orientation: 'vertical'
            Label:
                id: wildcards_label
                height: 25
                size_hint_y: None
                text: 'Output Format:'
            TextInput:
                id: wildcards_input
                height: 25
                size_hint_y: None
                on_text: root.preview_callback()


<ValidatedInput>:
    text: text_input.text
    size_hint_y: None
    height: max(input_label.height, text_input.height)
    Label:
        id: input_label
        text: root.name
        height: max(25, self.texture_size[1])
        width: self.texture_size[0] + 10
        size_hint: None, None
    TextInput:
        id: text_input
        text: root.text
        height: self.minimum_height


<ArgumentBox>:
    width: 240
    size_hint_x: None
    Slider:
        id: slider
        min: 0
        max: 100
        value: root.text if root.text.replace('.', '', 1).isdigit() else self.min
        on_touch_move: root.text = str(self.value)
        step: 10


<FileLabel>:
    text_size: self.width, None
    size: self.texture_size